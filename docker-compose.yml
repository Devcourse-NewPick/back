version: '3.8'

services:
  mongo1:
    image: mongo:latest
    hostname: newpick-mongo1
    container_name: newpick-mongo1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - mongo1_data:/data/db
      - type: bind
        source: ./mongodb/mongodb.key
        target: /data/mongodb.key
        read_only: true
    command: mongod --replSet myReplicaSet --keyFile /data/mongodb.key --bind_ip_all
    user: mongodb
    networks:
      - mongo_network

  mongo2:
    image: mongo:latest
    hostname: newpick-mongo2
    container_name: newpick-mongo2
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    depends_on:
      - mongo1
    ports:
      - 27018:27017
    volumes:
      - mongo2_data:/data/db
      - type: bind
        source: ./mongodb/mongodb.key
        target: /data/mongodb.key
        read_only: true
    command: mongod --replSet myReplicaSet --keyFile /data/mongodb.key --bind_ip_all
    user: mongodb
    networks:
      - mongo_network

  mongo3:
    image: mongo:latest
    hostname: newpick-mongo3
    container_name: newpick-mongo3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    depends_on:
      - mongo2
    ports:
      - 27019:27017
    volumes:
      - mongo3_data:/data/db
      - type: bind
        source: ./mongodb/mongodb.key
        target: /data/mongodb.key
        read_only: true
    command: mongod --replSet myReplicaSet --keyFile /data/mongodb.key --bind_ip_all
    user: mongodb
    networks:
      - mongo_network

  mysql:
    image: mysql:8.0.40
    container_name: newpick-mysql
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=newpick
      - MYSQL_ROOT_HOST=%
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - mysql_network

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mysql_data:

networks:
  mongo_network:
    name: mongo_network
    driver: bridge
  mysql_network:
    name: mysql_network
    driver: bridge