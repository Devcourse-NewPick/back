name: Deploy Application to EC2 Server
on:
 push:
   branches: [ main ]
jobs:
 deploy:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout repository
       uses: actions/checkout@v4
       
     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: 20
         cache: 'npm'
         
     - name: Update code and build
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.EC2_HOST }}
         username: ${{ secrets.EC2_USER }}
         key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
         command_timeout: "10m"
         script: |
           if [ -d "~/back" ]; then
             rm -rf ~/back
           fi
           
           git clone https://github.com/Devcourse-NewPick/back.git ~/back
           
           cd ~/back
           
           echo "PORT='${{ secrets.PORT }}'" | sudo tee ~/back/.env > /dev/null
           echo "MYSQL_URL='${{ secrets.MYSQL_URL }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "MONGO_URL='${{ secrets.MONGO_URL }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "FRONTEND_URL='${{ secrets.FRONTEND_URL }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "JWT_SECRET='${{ secrets.JWT_SECRET }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "GOOGLE_REDIRECT_URI='${{ secrets.GOOGLE_REDIRECT_URI }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "SENTRY_DSN='${{ secrets.SENTRY_DSN }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "MAIL_USER='${{ secrets.MAIL_USER }}'" | sudo tee -a ~/back/.env > /dev/null
           echo "MAIL_PASSWORD='${{ secrets.MAIL_PASSWORD }}'" | sudo tee -a ~/back/.env > /dev/null
           sudo chown ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} ~/back/.env
           
           npm install
           npm run prisma:generate:mysql
           npm run generate:category
           npm run build
           
     - name: Restart Service
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.EC2_HOST }}
         username: ${{ secrets.EC2_USER }}
         key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
         command_timeout: "3m"
         script: |
           if sudo systemctl is-active --quiet nestjs.service; then
             sudo systemctl restart nestjs.service
           elif sudo systemctl is-failed --quiet nestjs.service; then
             sudo systemctl restart nestjs.service
           else
             sudo systemctl start nestjs.service
           fi
           
           if sudo systemctl is-active --quiet nestjs.service; then
             echo "üöÄ Deployment successful!"
           else
             echo "‚ùå Service failed to start"
             exit 1
           fi
